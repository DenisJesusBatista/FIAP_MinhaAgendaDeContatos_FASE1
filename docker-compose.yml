services:
  # DATABASE
  minhaagenda-database:
    container_name: minhaagenda-database
    image: postgres:latest
    ports:
      - 5432:5432
    volumes: 
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: minhaagenda
    networks:
      - mynw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # API
  minhaagenda:
    container_name: minhaagenda
    image: ${DOCKER_REGISTRY-}minhaagenda
    ports:
      - 8888:80
    build:
      context: .
      dockerfile: /src/Backend/MinhaAgendaDeContatos.Api/Dockerfile
    depends_on:
      minhaagenda-database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_HOST: minhaagenda-database
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: minhaagenda
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    networks:
      - mynw

 # RABBITMQ
  rabbitmq:
    container_name: rabbitmq
    ##image: rabbitmq:management
    image: rabbitmq:3.13.7-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - mynw
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 30s
      timeout: 10s
      retries: 5
      
  # PGADMIN4  
  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin_4
    restart: unless-stopped # A não ser que o container pare, restart nas falhas
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@gmail.com
      PGADMIN_DEFAULT_PASSWORD: dev
      PGADMIN_SERVER_MODE: "False" # Desabilita o modo servidor para configuração automática
      PGADMIN_SERVER_JSON_CONFIG: | # Configuração automática do servidor
        {
          "Servers": {
            "1": {
              "Name": "minhaagenda",
              "Group": "Grupo 1",
              "Host": "minhaagenda-database",
              "Port": 5432,
              "Username": "postgres",
              "Password": "postgres",
              "SSLMode": "prefer"
            }
          }
        }
    ports: 
      - 15432:80
    networks: 
      - mynw

  # PROMETHEUS
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - mynw

  # GRAFANA
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - mynw

volumes:
  postgres_data:

networks:
  mynw:
    driver: bridge
