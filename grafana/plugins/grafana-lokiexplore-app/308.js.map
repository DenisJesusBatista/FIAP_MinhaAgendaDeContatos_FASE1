{"version":3,"file":"308.js","mappings":"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","sources":["webpack://grafana-lokiexplore-app/../node_modules/@bsull/augurs/augurs.js"],"sourcesContent":["let wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nlet cachedFloat64Memory0 = null;\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nlet cachedBigInt64Memory0 = null;\n\nfunction getBigInt64Memory0() {\n    if (cachedBigInt64Memory0 === null || cachedBigInt64Memory0.byteLength === 0) {\n        cachedBigInt64Memory0 = new BigInt64Array(wasm.memory.buffer);\n    }\n    return cachedBigInt64Memory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction passArrayF64ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 8, 8) >>> 0;\n    getFloat64Memory0().set(arg, ptr / 8);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachedUint32Memory0 = null;\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0 === null || cachedUint32Memory0.byteLength === 0) {\n        cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction getArrayU32FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n/**\n* Detect the seasonal periods in a time series.\n* @param {Float64Array} y\n* @param {SeasonalityOptions | undefined} [options]\n* @returns {Uint32Array}\n*/\nexport function seasonalities(y, options) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArrayF64ToWasm0(y, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.seasonalities(retptr, ptr0, len0, isLikeNone(options) ? 0 : addHeapObject(options));\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU32FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 4, 4);\n        return v2;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4, 4) >>> 0;\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* Create a new MSTL model with the given periods using the `AutoETS` trend model.\n* @param {Uint32Array} periods\n* @param {ETSOptions | undefined} [options]\n* @returns {MSTL}\n*/\nexport function ets(periods, options) {\n    const ptr0 = passArray32ToWasm0(periods, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.ets(ptr0, len0, isLikeNone(options) ? 0 : addHeapObject(options));\n    return MSTL.__wrap(ret);\n}\n\n/**\n* Initialize the logger and panic hook.\n*\n* This will be called automatically when the module is imported.\n* It sets the default tracing subscriber to `tracing-wasm`, and\n* sets WASM panics to print to the console with a helpful error\n* message.\n*/\nexport function custom_init() {\n    wasm.custom_init();\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nconst AutoETSFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_autoets_free(ptr >>> 0));\n/**\n* Automatic ETS model selection.\n*/\nexport class AutoETS {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        AutoETSFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_autoets_free(ptr);\n    }\n    /**\n    * Create a new `AutoETS` model search instance.\n    *\n    * # Errors\n    *\n    * If the `spec` string is invalid, this function returns an error.\n    * @param {number} seasonLength\n    * @param {string} spec\n    */\n    constructor(seasonLength, spec) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(spec, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.autoets_new(retptr, seasonLength, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            this.__wbg_ptr = r0 >>> 0;\n            return this;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Search for the best model, fitting it to the data.\n    *\n    * The model will be stored on the inner `AutoETS` instance, after which\n    * forecasts can be produced using its `predict` method.\n    *\n    * # Errors\n    *\n    * If no model can be found, or if any parameters are invalid, this function\n    * returns an error.\n    * @param {Float64Array} y\n    */\n    fit(y) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.autoets_fit(retptr, this.__wbg_ptr, addHeapObject(y));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Predict the next `horizon` values using the best model, optionally including\n    * prediction intervals at the specified level.\n    *\n    * `level` should be a float between 0 and 1 representing the confidence level.\n    *\n    * # Errors\n    *\n    * This function will return an error if no model has been fit yet (using [`AutoETS::fit`]).\n    * @param {number} horizon\n    * @param {number | undefined} [level]\n    * @returns {Forecast}\n    */\n    predict(horizon, level) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.autoets_predict(retptr, this.__wbg_ptr, horizon, !isLikeNone(level), isLikeNone(level) ? 0 : level);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nconst ChangepointDetectorFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_changepointdetector_free(ptr >>> 0));\n/**\n* A changepoint detector.\n*/\nexport class ChangepointDetector {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(ChangepointDetector.prototype);\n        obj.__wbg_ptr = ptr;\n        ChangepointDetectorFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        ChangepointDetectorFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_changepointdetector_free(ptr);\n    }\n    /**\n    * Create a new Bayesian Online changepoint detector with a Normal Gamma prior.\n    * @param {NormalGammaDetectorOpts | undefined} [opts]\n    * @returns {ChangepointDetector}\n    */\n    static normalGamma(opts) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.changepointdetector_normalGamma(retptr, isLikeNone(opts) ? 0 : addHeapObject(opts));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return ChangepointDetector.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Create a new Autoregressive Gaussian Process changepoint detector\n    * with the default kernel and parameters.\n    * @param {DefaultArgpcpDetectorOpts | undefined} [opts]\n    * @returns {ChangepointDetector}\n    */\n    static defaultArgpcp(opts) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.changepointdetector_defaultArgpcp(retptr, isLikeNone(opts) ? 0 : addHeapObject(opts));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return ChangepointDetector.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Detect changepoints in the given time series.\n    * @param {Float64Array} y\n    * @returns {Changepoints}\n    */\n    detectChangepoints(y) {\n        const ret = wasm.changepointdetector_detectChangepoints(this.__wbg_ptr, addHeapObject(y));\n        return takeObject(ret);\n    }\n}\n\nconst LoadedOutlierDetectorFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_loadedoutlierdetector_free(ptr >>> 0));\n/**\n* A 'loaded' outlier detector, ready to detect outliers.\n*\n* This is returned by the `preprocess` method of `OutlierDetector`,\n* and holds the preprocessed data for the detector.\n*/\nexport class LoadedOutlierDetector {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(LoadedOutlierDetector.prototype);\n        obj.__wbg_ptr = ptr;\n        LoadedOutlierDetectorFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        LoadedOutlierDetectorFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_loadedoutlierdetector_free(ptr);\n    }\n    /**\n    * @returns {OutlierOutput}\n    */\n    detect() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.loadedoutlierdetector_detect(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Update the detector with new options.\n    *\n    * # Errors\n    *\n    * This method will return an error if the detector and options types\n    * are incompatible.\n    * @param {OutlierDetectorOptions} options\n    */\n    updateDetector(options) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.loadedoutlierdetector_updateDetector(retptr, this.__wbg_ptr, addHeapObject(options));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nconst MSTLFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_mstl_free(ptr >>> 0));\n/**\n* A MSTL model.\n*/\nexport class MSTL {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(MSTL.prototype);\n        obj.__wbg_ptr = ptr;\n        MSTLFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        MSTLFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_mstl_free(ptr);\n    }\n    /**\n    * Fit the model to the given time series.\n    * @param {Float64Array} y\n    */\n    fit(y) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.mstl_fit(retptr, this.__wbg_ptr, addHeapObject(y));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            if (r1) {\n                throw takeObject(r0);\n            }\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Predict the next `horizon` values, optionally including prediction\n    * intervals at the given level.\n    *\n    * If provided, `level` must be a float between 0 and 1.\n    * @param {number} horizon\n    * @param {number | undefined} [level]\n    * @returns {Forecast}\n    */\n    predict(horizon, level) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.mstl_predict(retptr, this.__wbg_ptr, horizon, !isLikeNone(level), isLikeNone(level) ? 0 : level);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Produce in-sample forecasts, optionally including prediction\n    * intervals at the given level.\n    *\n    * If provided, `level` must be a float between 0 and 1.\n    * @param {number | undefined} [level]\n    * @returns {Forecast}\n    */\n    predictInSample(level) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.mstl_predictInSample(retptr, this.__wbg_ptr, !isLikeNone(level), isLikeNone(level) ? 0 : level);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nconst OutlierDetectorFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_outlierdetector_free(ptr >>> 0));\n/**\n* A detector for detecting outlying time series in a group of series.\n*/\nexport class OutlierDetector {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(OutlierDetector.prototype);\n        obj.__wbg_ptr = ptr;\n        OutlierDetectorFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        OutlierDetectorFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_outlierdetector_free(ptr);\n    }\n    /**\n    * Create a new outlier detector using the DBSCAN algorithm.\n    * @param {DBSCANDetectorOptions} options\n    * @returns {OutlierDetector}\n    */\n    static dbscan(options) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.outlierdetector_dbscan(retptr, addHeapObject(options));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return OutlierDetector.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @param {MADDetectorOptions} options\n    * @returns {OutlierDetector}\n    */\n    static mad(options) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.outlierdetector_mad(retptr, addHeapObject(options));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return OutlierDetector.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Detect outlying time series in a group of series.\n    *\n    * Note: if you plan to run the detector multiple times on the same data,\n    * you should use the `preprocess` method to cache the preprocessed data,\n    * then call `detect` on the `LoadedOutlierDetector` returned by `preprocess`.\n    * @param {Float64Array} y\n    * @param {number} nTimestamps\n    * @returns {OutlierOutput}\n    */\n    detect(y, nTimestamps) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.outlierdetector_detect(retptr, this.__wbg_ptr, addHeapObject(y), nTimestamps);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return takeObject(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Preprocess the data for the detector.\n    *\n    * The returned value is a 'loaded' outlier detector, which can be used\n    * to detect outliers without needing to preprocess the data again.\n    *\n    * This is useful if you plan to run the detector multiple times on the same data.\n    * @param {Float64Array} y\n    * @param {number} nTimestamps\n    * @returns {LoadedOutlierDetector}\n    */\n    preprocess(y, nTimestamps) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.outlierdetector_preprocess(retptr, this.__wbg_ptr, addHeapObject(y), nTimestamps);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return LoadedOutlierDetector.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_error_new = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_is_bigint = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'bigint';\n        return ret;\n    };\n    imports.wbg.__wbindgen_bigint_from_u64 = function(arg0) {\n        const ret = BigInt.asUintN(64, arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_jsval_eq = function(arg0, arg1) {\n        const ret = getObject(arg0) === getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbindgen_in = function(arg0, arg1) {\n        const ret = getObject(arg0) in getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_abda76e883ba8a5f = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_crypto_1d1f22824a6a080c = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_process_4a72847cc503995b = function(arg0) {\n        const ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_versions_f686565e586dd935 = function(arg0) {\n        const ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_104a2ff8d6ea03a2 = function(arg0) {\n        const ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_require_cca90b1a94a0255b = function() { return handleError(function () {\n        const ret = module.require;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_msCrypto_eb05e62b530a1508 = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_randomFillSync_5c9c955aa56b6049 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).randomFillSync(takeObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_getRandomValues_3aa56aa6edec874c = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_jsval_loose_eq = function(arg0, arg1) {\n        const ret = getObject(arg0) == getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_as_number = function(arg0) {\n        const ret = +getObject(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_String_b9412f8799faab3e = function(arg0, arg1) {\n        const ret = String(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_getwithrefkey_edc2c8960f0f1191 = function(arg0, arg1) {\n        const ret = getObject(arg0)[getObject(arg1)];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_f975102236d3c502 = function(arg0, arg1, arg2) {\n        getObject(arg0)[takeObject(arg1)] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_get_bd8e338fbd5f5cc8 = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 >>> 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_cd7af8117672b8b8 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_new_16b304a2cfa7ff4a = function() {\n        const ret = new Array();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newnoargs_e258087cd0daa0ea = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_27c0f87801dedf93 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_72fb9a18b5ae2624 = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_ce0dbfc45cf2f5be = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_c6fb939a7f436783 = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_d1e6af4856ba331b = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_207b558942527489 = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_set_d4638f722068f043 = function(arg0, arg1, arg2) {\n        getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_instanceof_ArrayBuffer_836825be07d4c9d2 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof ArrayBuffer;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_call_b3ca7c6051f9bec1 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_isSafeInteger_f7b04ef02296c4d2 = function(arg0) {\n        const ret = Number.isSafeInteger(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_entries_95cc2c823b285a09 = function(arg0) {\n        const ret = Object.entries(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_12d079cc21e14bdb = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_63b92bc8671ed464 = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_a47bac70306a19a7 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_c20a40f15020d68a = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_new_5e4931c0e7b0d773 = function(arg0) {\n        const ret = new Float64Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_cb4cf3c3a46bcdd2 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_0382220548385255 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Uint8Array_2b3bbecd033d19f6 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Uint8Array;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_e9b4878cebadb3d3 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_subarray_a1f73cd4b5b42fe1 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_bigint_get_as_i64 = function(arg0, arg1) {\n        const v = getObject(arg1);\n        const ret = typeof(v) === 'bigint' ? v : undefined;\n        getBigInt64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? BigInt(0) : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedBigInt64Memory0 = null;\n    cachedFloat64Memory0 = null;\n    cachedInt32Memory0 = null;\n    cachedUint32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('augurs_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n"],"names":["wasm","heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","addHeapObject","obj","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","Error","cachedUint8Memory0","getUint8Memory0","byteLength","Uint8Array","memory","buffer","getStringFromWasm0","ptr","len","subarray","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encode","encodeString","encodeInto","arg","view","buf","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","isLikeNone","x","cachedInt32Memory0","getInt32Memory0","Int32Array","cachedFloat64Memory0","getFloat64Memory0","Float64Array","cachedBigInt64Memory0","debugString","val","type","description","name","isArray","debug","i","builtInMatches","exec","toString","call","className","JSON","stringify","_","message","stack","cachedUint32Memory0","getUint32Memory0","Uint32Array","seasonalities","y","options","retptr","__wbindgen_add_to_stack_pointer","ptr0","passArrayF64ToWasm0","__wbindgen_malloc","len0","r0","r1","v2","__wbindgen_free","ets","periods","passArray32ToWasm0","MSTL","__wrap","custom_init","handleError","f","args","apply","this","e","__wbindgen_exn_store","AutoETSFinalization","FinalizationRegistry","register","unregister","__wbg_autoets_free","AutoETS","__destroy_into_raw","__wbg_ptr","free","constructor","seasonLength","spec","__wbindgen_realloc","autoets_new","fit","autoets_fit","predict","horizon","level","autoets_predict","ChangepointDetectorFinalization","__wbg_changepointdetector_free","ChangepointDetector","Object","create","prototype","normalGamma","opts","changepointdetector_normalGamma","defaultArgpcp","changepointdetector_defaultArgpcp","detectChangepoints","changepointdetector_detectChangepoints","LoadedOutlierDetectorFinalization","__wbg_loadedoutlierdetector_free","LoadedOutlierDetector","detect","loadedoutlierdetector_detect","updateDetector","loadedoutlierdetector_updateDetector","MSTLFinalization","__wbg_mstl_free","mstl_fit","mstl_predict","predictInSample","mstl_predictInSample","OutlierDetectorFinalization","__wbg_outlierdetector_free","OutlierDetector","dbscan","outlierdetector_dbscan","mad","outlierdetector_mad","nTimestamps","outlierdetector_detect","preprocess","outlierdetector_preprocess","__wbg_get_imports","imports","wbg","__wbindgen_object_drop_ref","arg0","__wbindgen_object_clone_ref","__wbindgen_error_new","arg1","__wbindgen_string_get","ptr1","len1","__wbindgen_is_bigint","__wbindgen_bigint_from_u64","BigInt","asUintN","__wbindgen_jsval_eq","__wbindgen_boolean_get","v","__wbindgen_is_string","__wbindgen_number_get","__wbindgen_is_object","__wbindgen_is_undefined","__wbindgen_in","__wbindgen_string_new","__wbg_new_abda76e883ba8a5f","__wbg_stack_658279fe44541cf6","__wbg_error_f851667af71bcfc6","deferred0_0","deferred0_1","console","error","__wbg_crypto_1d1f22824a6a080c","crypto","__wbg_process_4a72847cc503995b","process","__wbg_versions_f686565e586dd935","versions","__wbg_node_104a2ff8d6ea03a2","node","__wbg_require_cca90b1a94a0255b","module","require","arguments","__wbindgen_is_function","__wbg_msCrypto_eb05e62b530a1508","msCrypto","__wbg_randomFillSync_5c9c955aa56b6049","randomFillSync","__wbg_getRandomValues_3aa56aa6edec874c","getRandomValues","__wbindgen_number_new","__wbindgen_jsval_loose_eq","__wbindgen_as_number","__wbg_String_b9412f8799faab3e","String","__wbg_getwithrefkey_edc2c8960f0f1191","__wbg_set_f975102236d3c502","arg2","__wbg_get_bd8e338fbd5f5cc8","__wbg_length_cd7af8117672b8b8","__wbg_new_16b304a2cfa7ff4a","__wbg_newnoargs_e258087cd0daa0ea","Function","__wbg_call_27c0f87801dedf93","__wbg_new_72fb9a18b5ae2624","__wbg_self_ce0dbfc45cf2f5be","self","__wbg_window_c6fb939a7f436783","window","__wbg_globalThis_d1e6af4856ba331b","globalThis","__wbg_global_207b558942527489","g","global","__wbg_set_d4638f722068f043","__wbg_instanceof_ArrayBuffer_836825be07d4c9d2","result","ArrayBuffer","__wbg_call_b3ca7c6051f9bec1","__wbg_isSafeInteger_f7b04ef02296c4d2","Number","isSafeInteger","__wbg_entries_95cc2c823b285a09","entries","__wbg_buffer_12d079cc21e14bdb","__wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb","__wbg_new_63b92bc8671ed464","__wbg_set_a47bac70306a19a7","__wbg_length_c20a40f15020d68a","__wbg_new_5e4931c0e7b0d773","__wbg_set_cb4cf3c3a46bcdd2","__wbg_length_0382220548385255","__wbg_instanceof_Uint8Array_2b3bbecd033d19f6","__wbg_newwithlength_e9b4878cebadb3d3","__wbg_subarray_a1f73cd4b5b42fe1","__wbindgen_bigint_get_as_i64","BigInt64Array","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_memory","__wbg_finalize_init","instance","exports","__wbg_init","__wbindgen_wasm_module","__wbindgen_start","initSync","WebAssembly","Module","Instance","async","input","URL","Request","fetch","Response","instantiateStreaming","headers","get","warn","bytes","arrayBuffer","instantiate","__wbg_load"],"sourceRoot":""}