{"version":3,"file":"594.js","mappings":"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","sources":["webpack://grafana-lokiexplore-app/./Components/Pages.tsx","webpack://grafana-lokiexplore-app/./Components/LogExplorationPage.tsx"],"sourcesContent":["import {\n  EmbeddedScene,\n  SceneAppPage,\n  SceneAppPageLike,\n  SceneFlexLayout,\n  SceneRouteMatch,\n  SceneTimeRange,\n} from '@grafana/scenes';\nimport {\n  CHILD_ROUTE_DEFINITIONS,\n  ChildDrilldownSlugs,\n  DRILLDOWN_URL_KEYS,\n  extractValuesFromRoute,\n  PageSlugs,\n  ParentDrilldownSlugs,\n  PLUGIN_BASE_URL,\n  prefixRoute,\n  ROUTE_DEFINITIONS,\n  ROUTES,\n  SERVICE_URL_KEYS,\n  SUB_ROUTES,\n  ValueSlugs,\n} from '../services/routing';\nimport { PageLayoutType } from '@grafana/data';\nimport { IndexScene } from './IndexScene/IndexScene';\nimport { navigateToIndex } from '../services/navigate';\nimport { logger } from '../services/logger';\nimport { capitalizeFirstLetter } from '../services/text';\n\nexport type RouteProps = { labelName: string; labelValue: string; breakdownLabel?: string };\nexport type RouteMatch = SceneRouteMatch<RouteProps>;\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\nexport type OptionalRouteProps = Optional<RouteProps, 'labelName' | 'labelValue'>;\nexport type OptionalRouteMatch = SceneRouteMatch<OptionalRouteProps>;\n\nfunction getServicesScene(routeMatch: OptionalRouteMatch) {\n  const DEFAULT_TIME_RANGE = { from: 'now-15m', to: 'now' };\n  return new EmbeddedScene({\n    body: new IndexScene({\n      $timeRange: new SceneTimeRange(DEFAULT_TIME_RANGE),\n      routeMatch,\n    }),\n  });\n}\n\n// Index page\nexport function makeIndexPage() {\n  return new SceneAppPage({\n    // Top level breadcrumb\n    title: 'Logs',\n    url: prefixRoute(PageSlugs.explore),\n    layout: PageLayoutType.Custom,\n    preserveUrlKeys: SERVICE_URL_KEYS,\n    routePath: prefixRoute(PageSlugs.explore),\n    getScene: (routeMatch) => getServicesScene(routeMatch),\n    drilldowns: [\n      {\n        routePath: ROUTE_DEFINITIONS.logs,\n        getPage: (routeMatch, parent) => makeBreakdownPage(routeMatch, parent, PageSlugs.logs),\n        defaultRoute: true,\n      },\n      {\n        routePath: ROUTE_DEFINITIONS.labels,\n        getPage: (routeMatch, parent) => makeBreakdownPage(routeMatch, parent, PageSlugs.labels),\n      },\n      {\n        routePath: ROUTE_DEFINITIONS.patterns,\n        getPage: (routeMatch, parent) => makeBreakdownPage(routeMatch, parent, PageSlugs.patterns),\n      },\n      {\n        routePath: ROUTE_DEFINITIONS.fields,\n        getPage: (routeMatch, parent) => makeBreakdownPage(routeMatch, parent, PageSlugs.fields),\n      },\n      {\n        routePath: CHILD_ROUTE_DEFINITIONS.label,\n        getPage: (routeMatch, parent) => makeBreakdownValuePage(routeMatch, parent, ValueSlugs.label),\n      },\n      {\n        routePath: CHILD_ROUTE_DEFINITIONS.field,\n        getPage: (routeMatch: RouteMatch, parent) => makeBreakdownValuePage(routeMatch, parent, ValueSlugs.field),\n      },\n      {\n        routePath: '*',\n        getPage: () => makeRedirectPage(),\n      },\n    ],\n  });\n}\n\n// Redirect page back to index\nexport function makeRedirectPage() {\n  return new SceneAppPage({\n    title: '',\n    url: PLUGIN_BASE_URL,\n    getScene: makeEmptyScene(),\n    hideFromBreadcrumbs: true,\n    routePath: '*',\n    $behaviors: [\n      () => {\n        navigateToIndex();\n      },\n    ],\n  });\n}\n\nfunction makeEmptyScene(): (routeMatch: SceneRouteMatch) => EmbeddedScene {\n  return () =>\n    new EmbeddedScene({\n      body: new SceneFlexLayout({\n        direction: 'column',\n        children: [],\n      }),\n    });\n}\n\nexport function makeBreakdownPage(\n  routeMatch: RouteMatch,\n  parent: SceneAppPageLike,\n  slug: ParentDrilldownSlugs\n): SceneAppPage {\n  const { labelName, labelValue } = extractValuesFromRoute(routeMatch);\n  return new SceneAppPage({\n    title: capitalizeFirstLetter(slug),\n    layout: PageLayoutType.Custom,\n    url: ROUTES[slug](labelValue, labelName),\n    preserveUrlKeys: DRILLDOWN_URL_KEYS,\n    getParentPage: () => parent,\n    getScene: (routeMatch) => getServicesScene(routeMatch),\n  });\n}\n\nexport function makeBreakdownValuePage(\n  routeMatch: RouteMatch,\n  parent: SceneAppPageLike,\n  slug: ChildDrilldownSlugs\n): SceneAppPage {\n  const { labelName, labelValue, breakdownLabel } = extractValuesFromRoute(routeMatch);\n\n  if (!breakdownLabel) {\n    const e = new Error('Breakdown value missing!');\n    logger.error(e, { labelName, labelValue, breakdownLabel: breakdownLabel ?? '' });\n    throw e;\n  }\n\n  return new SceneAppPage({\n    title: capitalizeFirstLetter(breakdownLabel),\n    layout: PageLayoutType.Custom,\n    url: SUB_ROUTES[slug](labelValue, labelName, breakdownLabel),\n    preserveUrlKeys: DRILLDOWN_URL_KEYS,\n    getParentPage: () => parent,\n    getScene: (routeMatch) => getServicesScene(routeMatch),\n  });\n}\n","import React, { useEffect } from 'react';\n\nimport { SceneApp, useSceneApp } from '@grafana/scenes';\nimport { config } from '@grafana/runtime';\nimport { Redirect } from 'react-router-dom';\nimport { makeIndexPage, makeRedirectPage } from './Pages';\nimport { initializeMetadataService } from '../services/metadata';\n\nconst getSceneApp = () =>\n  new SceneApp({\n    pages: [makeIndexPage(), makeRedirectPage()],\n    urlSyncOptions: {\n      createBrowserHistorySteps: false,\n      updateUrlOnInit: true,\n    },\n  });\n\nfunction LogExplorationView() {\n  const [isInitialized, setIsInitialized] = React.useState(false);\n\n  initializeMetadataService();\n\n  const scene = useSceneApp(getSceneApp);\n\n  useEffect(() => {\n    if (!isInitialized) {\n      setIsInitialized(true);\n    }\n  }, [scene, isInitialized]);\n\n  const userPermissions = config.bootData.user.permissions;\n  const canUseApp = userPermissions?.['grafana-lokiexplore-app:read'] || userPermissions?.['datasources:explore'];\n  if (!canUseApp) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (!isInitialized) {\n    return null;\n  }\n\n  return <scene.Component model={scene} />;\n}\n\nexport default LogExplorationView;\n"],"names":["getServicesScene","routeMatch","EmbeddedScene","body","IndexScene","$timeRange","SceneTimeRange","from","to","makeRedirectPage","SceneAppPage","title","url","PLUGIN_BASE_URL","getScene","SceneFlexLayout","direction","children","hideFromBreadcrumbs","routePath","$behaviors","navigateToIndex","makeBreakdownPage","parent","slug","labelName","labelValue","extractValuesFromRoute","capitalizeFirstLetter","layout","PageLayoutType","Custom","ROUTES","preserveUrlKeys","DRILLDOWN_URL_KEYS","getParentPage","makeBreakdownValuePage","breakdownLabel","e","Error","logger","error","SUB_ROUTES","getSceneApp","SceneApp","pages","prefixRoute","PageSlugs","explore","SERVICE_URL_KEYS","drilldowns","ROUTE_DEFINITIONS","logs","getPage","defaultRoute","labels","patterns","fields","CHILD_ROUTE_DEFINITIONS","label","ValueSlugs","field","urlSyncOptions","createBrowserHistorySteps","updateUrlOnInit","isInitialized","setIsInitialized","React","initializeMetadataService","scene","useSceneApp","useEffect","userPermissions","config","bootData","user","permissions","Component","model","Redirect"],"sourceRoot":""}